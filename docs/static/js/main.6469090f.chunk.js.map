{"version":3,"sources":["components/Header/index.js","components/EditPage/index.js","components/SingleMood/index.js","components/CalendarPage/index.js","components/Main/index.js","components/Footer/index.js","components/CalendarApp/index.js","components/App/index.js","index.js"],"names":["Header","react_default","a","createElement","className","EditPage","props","methodGetInput","state","methodSaveObject","methodCancel","react","htmlFor","type","id","name","required","onChange","value","inputData","date","checked","mood","includes","message","feedBack","react_router_dom","to","onClick","SingleMood","singleMood","concat","CalendarPage","savedMoods","length","map","single","index","key","components_SingleMood","Main","react_router","exact","path","render","components_CalendarPage","savedDates","components_EditPage","Footer","CalendarApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","getInput","bind","assertThisInitialized","saveObject","cancel","event","target","saveState","setState","prevState","objectSpread","defineProperty","compareArrayDates","writeFeedback","toConsumableArray","resetInputData","feedbackText","findIndex","savedDate","setItem","stringify","components_Header","components_Main","components_Footer","Component","App","components_CalendarApp","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6469090f.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.scss';\n\nfunction Header() {\n  return (\n    <header className=\"page__header\">\n      <h1 className=\"header__title\">Mood Calendar</h1>\n      {/* <nav className=\"header__nav\">\n        <p className=\"nav__text\"><i className=\"fas fa-edit\"></i>Add mood</p>\n        <p className=\"nav__text\"><i className=\"fas fa-calendar-alt\"></i>Check calendar</p>\n      </nav> */}\n    </header>\n  );\n}\n\nexport default Header;\n","import React, {Fragment} from 'react';\nimport './styles.scss';\nimport { Link } from 'react-router-dom';\n\nfunction EditPage(props) {\n  const { methodGetInput, state, methodSaveObject, methodCancel } = props;\n\n  return (\n    <Fragment>\n      <form className=\"main__form\">\n        <h2 className=\"main__title\">Edit mood ^___^</h2>\n        <fieldset className=\"form__fieldset\">\n          <label htmlFor=\"date\" className=\"fieldset__title\">Choose a date</label>\n          <input \n            className=\"form__input--date\"\n            type=\"date\" \n            id=\"date\"\n            name=\"date\"\n            required\n            onChange={methodGetInput}\n            value={state.inputData.date}\n          />\n        </fieldset>\n        <fieldset className=\"fieldset__check\">\n          <legend className=\"fieldset__title\">Choose your mood</legend>\n          <label htmlFor=\"happy\" className=\"form__input--radio\">\n              <input\n                id=\"happy\"\n                type=\"radio\"\n                value=\"happy\"\n                name=\"mood\"\n                checked={state.inputData.mood.includes('happy')}\n                onChange={methodGetInput}\n\n              />\n              {`:) Happy`}\n            </label>\n            <label htmlFor=\"sad\" className=\"form__input--radio\">\n              <input\n                id=\"sad\"\n                type=\"radio\"\n                value=\"sad\"\n                name=\"mood\"\n                checked={state.inputData.mood.includes('sad')}\n                onChange={methodGetInput}\n              />\n              {`:( Sad`}\n            </label>\n        </fieldset>\n        {state.inputData.mood === 'happy' \n          ?\n          <fieldset className=\"form__fieldset\">\n            <label htmlFor=\"message\" className=\"fieldset__title\">Message to remember</label>\n            <input\n              className=\"form__input--text\"\n              type=\"text\" \n              id=\"message\"\n              name=\"message\"\n              onChange={methodGetInput}\n              value={state.message}\n            />\n          </fieldset>\n        :\n        '' }\n        <p className=\"form__feedback\">{state.feedBack}</p>\n        <fieldset className=\"form__fieldset\">\n          {!state.inputData.date || !state.inputData.mood \n            ?  \n            <button\n              className=\"form__input--button save\" \n              type=\"button\" \n              id=\"submit\" \n              onClick={methodSaveObject}\n            >\n              Save\n            </button>\n            : \n            <Link to='/'>\n              <button\n                className=\"form__input--button save\" \n                type=\"button\" \n                id=\"submit\" \n                onClick={methodSaveObject}\n              >\n                Save\n              </button>\n            </Link>\n          }\n          \n          <Link to='/'>\n            <input\n              className=\"form__input--button cancel\" \n              type=\"button\" \n              id=\"cancel\" \n              value=\"Cancel\"\n              onClick={methodCancel}\n            />\n          </Link>\n        </fieldset>\n\n      </form>\n\n    </Fragment>\n  );\n}\n\nexport default EditPage;\n","import React from 'react';\nimport './styles.scss';\n\nfunction SingleMood(props) {\n    const { singleMood } = props;\n    return (\n        <div className=\"mood__wrapper\">\n            <div className={`mood ${singleMood.mood}`}>\n                <p className=\"face\">\n                    {singleMood.mood === 'happy'\n                        ? ':)'\n                        : ':('\n                    }\n                </p>\n            </div>\n            <div className=\"mood__info\">\n                <p>{singleMood.date}</p>\n                <p>{singleMood.message}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default SingleMood;","import React, { Fragment } from 'react';\nimport './styles.scss';\nimport SingleMood from '../SingleMood';\nimport { Link } from 'react-router-dom';\n\nfunction CalendarPage(props) {\n  const { savedMoods } = props;\n  return (\n    <Fragment>\n      <Link to=\"/edit\">\n        <button className=\"form__input--button save\">\n          + mood\n        </button>\n      </Link>\n      {savedMoods.length \n        ?\n          <ul className=\"mood__list\">\n            {savedMoods.map((single, index) => {\n              return (\n                <li key={index}>\n                  <SingleMood singleMood={single} />\n                </li>\n              )\n            })}\n          </ul>\n        :\n        <p>You have not moods saved yet</p>\n      }\n    </Fragment>\n  );\n}\n\nexport default CalendarPage;\n","import React from 'react';\nimport './styles.scss';\nimport EditPage from '../EditPage';\nimport CalendarPage from '../CalendarPage';\nimport { Route, Switch } from 'react-router-dom';\n\n\n\nfunction Main(props) {\n  const { methodGetInput, state, methodSaveObject, methodCancel } = props;\n\n  return (\n    <main className=\"page__main\">\n      <Switch >\n        <Route\n          exact path=\"/\"\n          render={() => {\n            return (\n              <CalendarPage\n                savedMoods={state.savedDates}\n              />\n            )\n          }}\n        />\n        <Route\n          exact path=\"/edit\"\n          render={() => {\n            return (\n              <EditPage\n                methodGetInput={methodGetInput}\n                state={state}\n                methodSaveObject={methodSaveObject}\n                methodCancel={methodCancel}\n              />\n            )\n          }}\n        />\n      </Switch>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport './styles.scss';\n\nfunction Footer() {\n  return (\n    <footer className=\"page__footer\">\n      mood calendar · Elvira Fuente · 2019\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component, Fragment } from 'react';\nimport './styles.scss';\nimport Header from '../Header';\nimport Main from '../Main';\nimport Footer from '../Footer';\n\n\nclass CalendarApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedDates: JSON.parse(localStorage.getItem('savedDates')) || [],\n      inputData: {\n        date: '',\n        mood: '',\n        message: '',\n      },\n      feedBack: ''\n    }\n    this.getInput = this.getInput.bind(this);\n    this.saveObject = this.saveObject.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n\n  getInput(event) {\n    const { value } = event.target;\n    const { name } = event.target;\n    this.saveState(name, value);\n  }\n\n  saveState(name, value) {\n    this.setState(prevState => {\n      return {\n        inputData: {\n          ...prevState.inputData,\n          [name]: value,\n        }\n      }\n    })\n  }\n\n  saveObject(event) {\n    // event.preventDefault();\n    \n    if (!this.state.inputData.mood || !this.state.inputData.date) {\n      this.writeFeedback('Fill out all form fields, please');\n    } else if( this.compareArrayDates() !== -1 ){  \n        this.writeFeedback('Sorry, but the date that you checked has beeen already saved')\n    } else {\n      this.setState(prevState => {\n        return {\n          savedDates: [\n            ...prevState.savedDates,\n            prevState.inputData\n          ],\n        }\n      })\n      this.resetInputData();\n      // this.writeFeedback('Your mood has been saved');\n    }\n  }\n\n  resetInputData() {\n    this.setState({\n      inputData: {\n        date: '',\n        mood: '',\n        message: '',\n      }\n    })\n  }\n\n  writeFeedback(feedbackText){\n    this.setState({\n      feedBack: feedbackText,\n    })\n  }\n  \n  compareArrayDates(){\n    const { date } = this.state.inputData;\n    const { savedDates } = this.state;\n    const indexDate = savedDates.findIndex( savedDate => savedDate.date === date )\n    return indexDate\n  }\n\n  cancel(){\n    this.resetInputData();\n    this.writeFeedback('');\n\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem('savedDates', JSON.stringify(this.state.savedDates));\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Main\n          methodGetInput={this.getInput}\n          state={this.state}\n          methodSaveObject={this.saveObject}\n          methodCancel={this.cancel}\n        />\n        <Footer />\n      </Fragment>\n    )\n  }\n}\n\nexport default CalendarApp;\n","import React, {Fragment } from 'react';\nimport './styles.scss';\nimport CalendarApp from '../CalendarApp';\n\nfunction App() {\n  return (\n    <Fragment>\n      <CalendarApp />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}